#should be overriden while deployment, Optional
nameOverride: ""
fullnameOverride: ""
appHost: ""
elkHost: ""

# DB credentials, required
db:
  dbUser: "<placeholder>" # DB username, required
  dbPassword: "<placeholder>" # DB password, required
  dbUrl: "<placeholder>" # DB URL with port, required
  dbName: "<placeholder>" # Database name, required
  # dbProto: "<placeholder>" # DB protocol, Optional, default mongodb

# Global params
global: 
#   pvcName: "" # Persistent volume claim name, make sure your PVC is available in a given namespace, Optional
#   jwtSecret: "theEncryptSuperSecretValue" # JWT secret, Optional, default theJWTSuperSecretValue
#   encryptSecret: theEncryptSuperSecretValue # Encrypt secret, Optional, default theEncryptSuperSecretValue
  webappExposeType: NodePort # webapp expose type, Optional, default LoadBalancer, allowed values are LoadBalancer, NodePort and ClusterIP
  webappProtocol: HTTPS # Webapp Protocol, optional, default HTTP, allowed values are HTTP and HTTPS
  
#   # Add labels to all the deployed resources, Optional
#   commonLabels: {}

#   # Add annotations to all the deployed resources, Optional
#   commonAnnotations: {}

#   # Image details, Optional
  image:
    registry: odcr.cloudhedge.io/omnideq # container image registry, Optional, default registry.connect.redhat.com/cloudhedge 
#     tag: ch-rel-1.3.3 # container image tag, Optional, default ch-rel-1.3.3

#     # Image pull secrets, Optional
    imagePullSecrets:
    - name: dockerpullsecret
    
#     # in case of private container registry, give user name and password to authenticate to pull the images, Optional
#     username: <placeholder>
#     password: <placeholder>



clusterDomain: cluster.local

webapp:
  container:
    image: webapp:ch-rel-1.5.1-1 #tag-to-replace-webapp
  ingress:
    appHostURL: omnideq.domain.com
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/client_max_body_size: 100m
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    tls:
      secretName: secret-tls

aws-lift-shift:
  container:
    image: aws-lift-shift:ch-rel-1.5.1-1 #tag-to-replace-aws-lift-shift

core-engine:
  container:
    image: core-engine:ch-rel-1.5.1-1 #tag-to-replace-core-engine

auth-gateway-service:
  container:
    image: auth-gateway-service:ch-rel-1.5.1-5 #tag-to-replace-auth-gateway-service

cloud-infra-service:
  container:
    image: cloud-infra-service:dev-83 #tag-to-replace-cloud-infra-service

notification-service:
  container:
    image: notification-service:ch-rel-1.5.1-1 #tag-to-replace-notification-service

vault-service:
  container:
    image: vault-service:ch-rel-1.5.1-1 #tag-to-replace-vault-service

activity-service:
  container:
    image: activity-service:ch-rel-1.5.1-1 #tag-to-replace-activity-service

discover-service-linux:
  container:
    image: discover-service-linux:ch-rel-1.5.1-1 #tag-to-replace-discover-service-linux

discover-service-aix:
  container:
    image: discover-service-aix:ch-rel-1.5.1-1 #tag-to-replace-discover-service-aix

discover-service-windows:
  container:
    image: discover-service-windows:ch-rel-1.5.1-1 #tag-to-replace-discover-service-windows

transform-service-linux:
  container:
    image: transform-service-linux:ch-rel-1.5.1-2 #tag-to-replace-transform-service-linux

transform-service-windows:
  container:
    image: transform-service-windows:ch-rel-1.5.1-2 #tag-to-replace-transform-service-windows

report-service:
  container:
    image: report-service:ch-rel-1.5.1-2 #tag-to-replace-report-service

cruize-service:
  container:
    image: cruize-service:ch-rel-1.5.1-1 #tag-to-replace-cruize-service

ch-user-guide:
  container:
    image: ch-user-guide:ch-rel-1.5.1-1 #tag-to-replace-ch-user-guide